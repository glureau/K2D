[{"name":"Chromebook(\"Chrome\", 3)","description":"sample.enums.DeviceKind.Chromebook","location":"samples/sample.enums/-device-kind/-chromebook/index.html","searchKeys":["Chromebook","Chromebook(\"Chrome\", 3)","sample.enums.DeviceKind.Chromebook"]},{"name":"Computer(\"Firefox\", 1)","description":"sample.enums.DeviceKind.Computer","location":"samples/sample.enums/-device-kind/-computer/index.html","searchKeys":["Computer","Computer(\"Firefox\", 1)","sample.enums.DeviceKind.Computer"]},{"name":"DOWN()","description":"sample.enums.Direction.DOWN","location":"samples/sample.enums/-direction/-d-o-w-n/index.html","searchKeys":["DOWN","DOWN()","sample.enums.Direction.DOWN"]},{"name":"LEFT()","description":"sample.enums.Direction.LEFT","location":"samples/sample.enums/-direction/-l-e-f-t/index.html","searchKeys":["LEFT","LEFT()","sample.enums.Direction.LEFT"]},{"name":"RIGHT()","description":"sample.enums.Direction.RIGHT","location":"samples/sample.enums/-direction/-r-i-g-h-t/index.html","searchKeys":["RIGHT","RIGHT()","sample.enums.Direction.RIGHT"]},{"name":"Smartphone(\"ios\", 0)","description":"sample.enums.DeviceKind.Smartphone","location":"samples/sample.enums/-device-kind/-smartphone/index.html","searchKeys":["Smartphone","Smartphone(\"ios\", 0)","sample.enums.DeviceKind.Smartphone"]},{"name":"Smartwatches(\"Samsung browser\", 4)","description":"sample.enums.DeviceKind.Smartwatches","location":"samples/sample.enums/-device-kind/-smartwatches/index.html","searchKeys":["Smartwatches","Smartwatches(\"Samsung browser\", 4)","sample.enums.DeviceKind.Smartwatches"]},{"name":"Tablet(\"Xiaomi\", 2)","description":"sample.enums.DeviceKind.Tablet","location":"samples/sample.enums/-device-kind/-tablet/index.html","searchKeys":["Tablet","Tablet(\"Xiaomi\", 2)","sample.enums.DeviceKind.Tablet"]},{"name":"UP()","description":"sample.enums.Direction.UP","location":"samples/sample.enums/-direction/-u-p/index.html","searchKeys":["UP","UP()","sample.enums.Direction.UP"]},{"name":"abstract fun add(t: T)","description":"sample.calculator.GenericFoo.add","location":"samples/sample.calculator/-generic-foo/add.html","searchKeys":["add","abstract fun add(t: T)","sample.calculator.GenericFoo.add"]},{"name":"abstract fun addAll(others: List<T>): List<T>","description":"sample.calculator.GenericFoo.addAll","location":"samples/sample.calculator/-generic-foo/add-all.html","searchKeys":["addAll","abstract fun addAll(others: List<T>): List<T>","sample.calculator.GenericFoo.addAll"]},{"name":"abstract fun computeResult(): Result<Int>","description":"sample.calculator.GenericFoo.computeResult","location":"samples/sample.calculator/-generic-foo/compute-result.html","searchKeys":["computeResult","abstract fun computeResult(): Result<Int>","sample.calculator.GenericFoo.computeResult"]},{"name":"abstract fun howMuchSides(): Int","description":"sample.Polygon.howMuchSides","location":"samples/sample/-polygon/how-much-sides.html","searchKeys":["howMuchSides","abstract fun howMuchSides(): Int","sample.Polygon.howMuchSides"]},{"name":"abstract fun rotate(angle: Float)","description":"sample.Rectangle.rotate","location":"samples/sample/-rectangle/rotate.html","searchKeys":["rotate","abstract fun rotate(angle: Float)","sample.Rectangle.rotate"]},{"name":"abstract val height: Float","description":"sample.Rectangle.height","location":"samples/sample/-rectangle/height.html","searchKeys":["height","abstract val height: Float","sample.Rectangle.height"]},{"name":"abstract val lambda: (String) -> Double","description":"sample.calculator.GenericFoo.lambda","location":"samples/sample.calculator/-generic-foo/lambda.html","searchKeys":["lambda","abstract val lambda: (String) -> Double","sample.calculator.GenericFoo.lambda"]},{"name":"abstract val latestResult: Result<Int>","description":"sample.calculator.GenericFoo.latestResult","location":"samples/sample.calculator/-generic-foo/latest-result.html","searchKeys":["latestResult","abstract val latestResult: Result<Int>","sample.calculator.GenericFoo.latestResult"]},{"name":"abstract val list: List<T>","description":"sample.calculator.GenericFoo.list","location":"samples/sample.calculator/-generic-foo/list.html","searchKeys":["list","abstract val list: List<T>","sample.calculator.GenericFoo.list"]},{"name":"abstract val originPosition: Position","description":"sample.Shape.originPosition","location":"samples/sample/-shape/origin-position.html","searchKeys":["originPosition","abstract val originPosition: Position","sample.Shape.originPosition"]},{"name":"abstract val width: Float","description":"sample.Rectangle.width","location":"samples/sample/-rectangle/width.html","searchKeys":["width","abstract val width: Float","sample.Rectangle.width"]},{"name":"class BinaryIntCalculator(var reg1: Int = 1, var reg2: Int = 2)","description":"sample.calculator.BinaryIntCalculator","location":"samples/sample.calculator/-binary-int-calculator/index.html","searchKeys":["BinaryIntCalculator","class BinaryIntCalculator(var reg1: Int = 1, var reg2: Int = 2)","sample.calculator.BinaryIntCalculator"]},{"name":"class Square(val originPosition: Position) : Polygon","description":"sample.Square","location":"samples/sample/-square/index.html","searchKeys":["Square","class Square(val originPosition: Position) : Polygon","sample.Square"]},{"name":"class TheTrap","description":"sample.another.TheTrap","location":"samples/sample.another/-the-trap/index.html","searchKeys":["TheTrap","class TheTrap","sample.another.TheTrap"]},{"name":"const val TAU: Double","description":"sample.Circle.Companion.TAU","location":"samples/sample/-circle/-companion/-t-a-u.html","searchKeys":["TAU","const val TAU: Double","sample.Circle.Companion.TAU"]},{"name":"data class Circle(val originPosition: Position, val radius: Float) : Shape","description":"sample.Circle","location":"samples/sample/-circle/index.html","searchKeys":["Circle","data class Circle(val originPosition: Position, val radius: Float) : Shape","sample.Circle"]},{"name":"data class InternalWeirdShape(val originPosition: Position, val radius: Float) : Shape","description":"sample.InternalWeirdShape","location":"samples/sample/-internal-weird-shape/index.html","searchKeys":["InternalWeirdShape","data class InternalWeirdShape(val originPosition: Position, val radius: Float) : Shape","sample.InternalWeirdShape"]},{"name":"data class Oval(val originPosition: Position, val distanceBetweenPoints: Float, val angle: Float, val radius: Float) : Shape","description":"sample.another.Oval","location":"samples/sample.another/-oval/index.html","searchKeys":["Oval","data class Oval(val originPosition: Position, val distanceBetweenPoints: Float, val angle: Float, val radius: Float) : Shape","sample.another.Oval"]},{"name":"data class Position(val x: Float, val y: Float)","description":"sample.Position","location":"samples/sample/-position/index.html","searchKeys":["Position","data class Position(val x: Float, val y: Float)","sample.Position"]},{"name":"enum DeviceKind : Enum<DeviceKind> ","description":"sample.enums.DeviceKind","location":"samples/sample.enums/-device-kind/index.html","searchKeys":["DeviceKind","enum DeviceKind : Enum<DeviceKind> ","sample.enums.DeviceKind"]},{"name":"enum Direction : Enum<Direction> ","description":"sample.enums.Direction","location":"samples/sample.enums/-direction/index.html","searchKeys":["Direction","enum Direction : Enum<Direction> ","sample.enums.Direction"]},{"name":"fun BinaryIntCalculator(reg1: Int = 1, reg2: Int = 2)","description":"sample.calculator.BinaryIntCalculator.BinaryIntCalculator","location":"samples/sample.calculator/-binary-int-calculator/-binary-int-calculator.html","searchKeys":["BinaryIntCalculator","fun BinaryIntCalculator(reg1: Int = 1, reg2: Int = 2)","sample.calculator.BinaryIntCalculator.BinaryIntCalculator"]},{"name":"fun Circle(originPosition: Position, radius: Float)","description":"sample.Circle.Circle","location":"samples/sample/-circle/-circle.html","searchKeys":["Circle","fun Circle(originPosition: Position, radius: Float)","sample.Circle.Circle"]},{"name":"fun InnerOval()","description":"sample.another.Oval.InnerOval.InnerOval","location":"samples/sample.another/-oval/-inner-oval/-inner-oval.html","searchKeys":["InnerOval","fun InnerOval()","sample.another.Oval.InnerOval.InnerOval"]},{"name":"fun InternalWeirdShape(originPosition: Position, radius: Float)","description":"sample.InternalWeirdShape.InternalWeirdShape","location":"samples/sample/-internal-weird-shape/-internal-weird-shape.html","searchKeys":["InternalWeirdShape","fun InternalWeirdShape(originPosition: Position, radius: Float)","sample.InternalWeirdShape.InternalWeirdShape"]},{"name":"fun Oval(originPosition: Position, distanceBetweenPoints: Float, angle: Float, radius: Float)","description":"sample.another.Oval.Oval","location":"samples/sample.another/-oval/-oval.html","searchKeys":["Oval","fun Oval(originPosition: Position, distanceBetweenPoints: Float, angle: Float, radius: Float)","sample.another.Oval.Oval"]},{"name":"fun Position(x: Float, y: Float)","description":"sample.Position.Position","location":"samples/sample/-position/-position.html","searchKeys":["Position","fun Position(x: Float, y: Float)","sample.Position.Position"]},{"name":"fun Square(originPosition: Position)","description":"sample.Square.Square","location":"samples/sample/-square/-square.html","searchKeys":["Square","fun Square(originPosition: Position)","sample.Square.Square"]},{"name":"fun TheTrap()","description":"sample.another.TheTrap.TheTrap","location":"samples/sample.another/-the-trap/-the-trap.html","searchKeys":["TheTrap","fun TheTrap()","sample.another.TheTrap.TheTrap"]},{"name":"fun build(): Oval","description":"sample.another.Oval.Builder.build","location":"samples/sample.another/-oval/-builder/build.html","searchKeys":["build","fun build(): Oval","sample.another.Oval.Builder.build"]},{"name":"fun calculate(binaryOp: (a: Int, b: () -> Int) -> Int): Int","description":"sample.calculator.BinaryIntCalculator.calculate","location":"samples/sample.calculator/-binary-int-calculator/calculate.html","searchKeys":["calculate","fun calculate(binaryOp: (a: Int, b: () -> Int) -> Int): Int","sample.calculator.BinaryIntCalculator.calculate"]},{"name":"fun publicFun()","description":"sample.Square.publicFun","location":"samples/sample/-square/public-fun.html","searchKeys":["publicFun","fun publicFun()","sample.Square.publicFun"]},{"name":"inner class InnerOval","description":"sample.another.Oval.InnerOval","location":"samples/sample.another/-oval/-inner-oval/index.html","searchKeys":["InnerOval","inner class InnerOval","sample.another.Oval.InnerOval"]},{"name":"interface GenericFoo<T : Number>","description":"sample.calculator.GenericFoo","location":"samples/sample.calculator/-generic-foo/index.html","searchKeys":["GenericFoo","interface GenericFoo<T : Number>","sample.calculator.GenericFoo"]},{"name":"interface Polygon : Shape","description":"sample.Polygon","location":"samples/sample/-polygon/index.html","searchKeys":["Polygon","interface Polygon : Shape","sample.Polygon"]},{"name":"interface Rectangle : Shape","description":"sample.Rectangle","location":"samples/sample/-rectangle/index.html","searchKeys":["Rectangle","interface Rectangle : Shape","sample.Rectangle"]},{"name":"interface Shape","description":"sample.Shape","location":"samples/sample/-shape/index.html","searchKeys":["Shape","interface Shape","sample.Shape"]},{"name":"object Builder","description":"sample.another.Oval.Builder","location":"samples/sample.another/-oval/-builder/index.html","searchKeys":["Builder","object Builder","sample.another.Oval.Builder"]},{"name":"object Companion","description":"sample.Circle.Companion","location":"samples/sample/-circle/-companion/index.html","searchKeys":["Companion","object Companion","sample.Circle.Companion"]},{"name":"open fun computeSurface(): Float","description":"sample.Shape.computeSurface","location":"samples/sample/-shape/compute-surface.html","searchKeys":["computeSurface","open fun computeSurface(): Float","sample.Shape.computeSurface"]},{"name":"open override fun computeSurface(): Float","description":"sample.Square.computeSurface","location":"samples/sample/-square/compute-surface.html","searchKeys":["computeSurface","open override fun computeSurface(): Float","sample.Square.computeSurface"]},{"name":"open override fun howMuchSides(): Int","description":"sample.Square.howMuchSides","location":"samples/sample/-square/how-much-sides.html","searchKeys":["howMuchSides","open override fun howMuchSides(): Int","sample.Square.howMuchSides"]},{"name":"open override val originPosition: Position","description":"sample.Circle.originPosition","location":"samples/sample/-circle/origin-position.html","searchKeys":["originPosition","open override val originPosition: Position","sample.Circle.originPosition"]},{"name":"open override val originPosition: Position","description":"sample.InternalWeirdShape.originPosition","location":"samples/sample/-internal-weird-shape/origin-position.html","searchKeys":["originPosition","open override val originPosition: Position","sample.InternalWeirdShape.originPosition"]},{"name":"open override val originPosition: Position","description":"sample.Square.originPosition","location":"samples/sample/-square/origin-position.html","searchKeys":["originPosition","open override val originPosition: Position","sample.Square.originPosition"]},{"name":"open override val originPosition: Position","description":"sample.another.Oval.originPosition","location":"samples/sample.another/-oval/origin-position.html","searchKeys":["originPosition","open override val originPosition: Position","sample.another.Oval.originPosition"]},{"name":"val angle: Float","description":"sample.another.Oval.angle","location":"samples/sample.another/-oval/angle.html","searchKeys":["angle","val angle: Float","sample.another.Oval.angle"]},{"name":"val centerOne: Position","description":"sample.another.Oval.centerOne","location":"samples/sample.another/-oval/center-one.html","searchKeys":["centerOne","val centerOne: Position","sample.another.Oval.centerOne"]},{"name":"val centerTwo: Position","description":"sample.another.Oval.centerTwo","location":"samples/sample.another/-oval/center-two.html","searchKeys":["centerTwo","val centerTwo: Position","sample.another.Oval.centerTwo"]},{"name":"val computedValue: Float","description":"sample.Square.computedValue","location":"samples/sample/-square/computed-value.html","searchKeys":["computedValue","val computedValue: Float","sample.Square.computedValue"]},{"name":"val distanceBetweenPoints: Float","description":"sample.another.Oval.distanceBetweenPoints","location":"samples/sample.another/-oval/distance-between-points.html","searchKeys":["distanceBetweenPoints","val distanceBetweenPoints: Float","sample.another.Oval.distanceBetweenPoints"]},{"name":"val foo: Int = 0","description":"sample.another.TheTrap.foo","location":"samples/sample.another/-the-trap/foo.html","searchKeys":["foo","val foo: Int = 0","sample.another.TheTrap.foo"]},{"name":"val hiddenValue: Float = 2.0f","description":"sample.Square.hiddenValue","location":"samples/sample/-square/hidden-value.html","searchKeys":["hiddenValue","val hiddenValue: Float = 2.0f","sample.Square.hiddenValue"]},{"name":"val index: Int","description":"sample.enums.DeviceKind.index","location":"samples/sample.enums/-device-kind/--index--.html","searchKeys":["index","val index: Int","sample.enums.DeviceKind.index"]},{"name":"val radius: Float","description":"sample.Circle.radius","location":"samples/sample/-circle/radius.html","searchKeys":["radius","val radius: Float","sample.Circle.radius"]},{"name":"val radius: Float","description":"sample.InternalWeirdShape.radius","location":"samples/sample/-internal-weird-shape/radius.html","searchKeys":["radius","val radius: Float","sample.InternalWeirdShape.radius"]},{"name":"val radius: Float","description":"sample.another.Oval.radius","location":"samples/sample.another/-oval/radius.html","searchKeys":["radius","val radius: Float","sample.another.Oval.radius"]},{"name":"val sideSize: Float = 1.0f","description":"sample.Square.sideSize","location":"samples/sample/-square/side-size.html","searchKeys":["sideSize","val sideSize: Float = 1.0f","sample.Square.sideSize"]},{"name":"val square: Square","description":"sample.another.Oval.InnerOval.square","location":"samples/sample.another/-oval/-inner-oval/square.html","searchKeys":["square","val square: Square","sample.another.Oval.InnerOval.square"]},{"name":"val userAgent: String","description":"sample.enums.DeviceKind.userAgent","location":"samples/sample.enums/-device-kind/user-agent.html","searchKeys":["userAgent","val userAgent: String","sample.enums.DeviceKind.userAgent"]},{"name":"val x: Float","description":"sample.Position.x","location":"samples/sample/-position/x.html","searchKeys":["x","val x: Float","sample.Position.x"]},{"name":"val y: Float","description":"sample.Position.y","location":"samples/sample/-position/y.html","searchKeys":["y","val y: Float","sample.Position.y"]},{"name":"var reg1: Int = 1","description":"sample.calculator.BinaryIntCalculator.reg1","location":"samples/sample.calculator/-binary-int-calculator/reg1.html","searchKeys":["reg1","var reg1: Int = 1","sample.calculator.BinaryIntCalculator.reg1"]},{"name":"var reg2: Int = 2","description":"sample.calculator.BinaryIntCalculator.reg2","location":"samples/sample.calculator/-binary-int-calculator/reg2.html","searchKeys":["reg2","var reg2: Int = 2","sample.calculator.BinaryIntCalculator.reg2"]}]
